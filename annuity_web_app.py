import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

st.set_page_config(page_title="–ê–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä", page_icon="üí∏")

def calculate_annuity(principal, annual_rate, months):
    monthly_rate = annual_rate / 12 / 100
    factor = (monthly_rate * (1 + monthly_rate) ** months) / ((1 + monthly_rate) ** months - 1)
    return round(principal * factor, 2)

def generate_schedule_with_prepayment(principal, rate, months, ep_month, ep_amount, option):
    monthly_rate = rate / 12 / 100
    payment = calculate_annuity(principal, rate, months)
    schedule = []
    balance = principal
    m = 1

    while balance > 0.01:
        interest = round(balance * monthly_rate, 2)
        principal_payment = round(payment - interest, 2)
        balance = round(balance - principal_payment, 2)

        # Apply prepayment
        if m == ep_month and ep_amount > 0:
            if ep_amount >= balance:
                schedule.append([m, ep_amount, ep_amount, 0, 0])
                break
            balance -= ep_amount
            if option == "–°–æ–∫—Ä–∞—Ç–∏—Ç—å —Å—Ä–æ–∫":
                remaining = months - m
                months = m + 1 + remaining  # just recalculate from this point
            elif option == "–£–º–µ–Ω—å—à–∏—Ç—å –ø–ª–∞—Ç—ë–∂":
                remaining = months - m
                payment = calculate_annuity(balance, rate, remaining)

        schedule.append([m, payment, principal_payment, interest, max(balance, 0)])
        m += 1

        # fail-safe to prevent infinite loop
        if m > 500:
            break

    df = pd.DataFrame(schedule, columns=["–ú–µ—Å—è—Ü", "–ü–ª–∞—Ç—ë–∂", "–¢–µ–ª–æ", "–ü—Ä–æ—Ü–µ–Ω—Ç—ã", "–û—Å—Ç–∞—Ç–æ–∫"])
    return df

# --- UI ---

st.title("üí∏ –ê–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –¥–æ—Å—Ä–æ—á–Ω—ã–º –ø–æ–≥–∞—à–µ–Ω–∏–µ–º")

col1, col2 = st.columns(2)
with col1:
    principal = st.number_input("–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (‚Ç∏)", min_value=100000, step=100000, value=2_000_000)
    months = st.slider("–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ (–º–µ—Å.)", 6, 360, 36)
with col2:
    rate = st.slider("–°—Ç–∞–≤–∫–∞ (% –≥–æ–¥–æ–≤—ã—Ö)", 1.0, 30.0, 14.0)
    st.markdown("")

st.markdown("### üîÑ –î–æ—Å—Ä–æ—á–Ω–æ–µ –ø–æ–≥–∞—à–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
extra_month = st.number_input("–ú–µ—Å—è—Ü –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è", min_value=0, max_value=months, value=0, step=1)
extra_amount = st.number_input("–°—É–º–º–∞ –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (‚Ç∏)", min_value=0.0, step=10000.0)
adjust_type = st.radio("–ü–æ—Å–ª–µ –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è:", ["–°–æ–∫—Ä–∞—Ç–∏—Ç—å —Å—Ä–æ–∫", "–£–º–µ–Ω—å—à–∏—Ç—å –ø–ª–∞—Ç—ë–∂"])

if st.button("üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å"):
    df = generate_schedule_with_prepayment(principal, rate, months, extra_month, extra_amount, adjust_type)
    total_paid = df["–ü–ª–∞—Ç—ë–∂"].sum()
    st.subheader(f"üí∞ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂: {df['–ü–ª–∞—Ç—ë–∂'].iloc[0]:,.2f} ‚Ç∏")
    st.write(f"üìâ –ü–µ—Ä–µ–ø–ª–∞—Ç–∞ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º: {df['–ü—Ä–æ—Ü–µ–Ω—Ç—ã'].sum():,.2f} ‚Ç∏")
    st.write(f"üìÜ –ö–æ–ª-–≤–æ –º–µ—Å—è—Ü–µ–≤: {df.shape[0]}")
    st.write(f"üí∏ –í—Å–µ–≥–æ –≤—ã–ø–ª–∞—á–µ–Ω–æ: {total_paid:,.2f} ‚Ç∏")

    st.markdown("### üßæ –ì—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π")
    st.dataframe(df.style.format("{:,.2f}"))

    st.markdown("### üìà –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–ª–∞—Ç–µ–∂–∞")
    fig, ax = plt.subplots()
    ax.plot(df["–ú–µ—Å—è—Ü"], df["–¢–µ–ª–æ"], label="–¢–µ–ª–æ", color="green")
    ax.plot(df["–ú–µ—Å—è—Ü"], df["–ü—Ä–æ—Ü–µ–Ω—Ç—ã"], label="–ü—Ä–æ—Ü–µ–Ω—Ç—ã", color="orange")
    ax.set_xlabel("–ú–µ—Å—è—Ü")
    ax.set_ylabel("–°—É–º–º–∞")
    ax.set_title("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞")
    ax.legend()
    st.pyplot(fig)
